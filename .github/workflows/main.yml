name: Android Build and Release

on:
  push:
    branches:
      - dev
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm package-lock.json
          npm install
          npm install -g react-native-cli
          npm install @expo/vector-icons
          npm install -g react-native-cli
          npm install react-native-file-viewer
          npm install react-native-push-notification
          npm install react-native-background-actions
          npm install react-native-fs

      - name: Display package.json
        run: cat package.json

      - name: Debug npm
        run: |
          npm --version
          node --version
          npm list

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Install Android SDK components
        run: |
          sdkmanager "platforms;android-34" "build-tools;34.0.0" "build-tools;29.0.3"
          yes | sdkmanager --licenses

      - name: Build Android Release
        run: |
          cd android
          ./gradlew assembleRelease

      # Optional: Sign the APK (uncomment and configure secrets if needed)
      # - name: Sign Android Release
      #   uses: r0adkll/sign-android-release@v1
      #   id: sign_app
      #   with:
      #     releaseDirectory: android/app/build/outputs/apk/release
      #     signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
      #     alias: ${{ secrets.ANDROID_ALIAS }}
      #     keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
      #     keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0-${{ github.run_number }} # Adjust the tag name as needed
          release_name: Release v1.0.0-${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
